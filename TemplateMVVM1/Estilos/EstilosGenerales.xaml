<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:my="clr-namespace:DevComponents.WpfRibbon;assembly=DevComponents.WpfRibbon"
    xmlns:dc="clr-namespace:DevComponents.WPF.Controls;assembly=DevComponents.WPF.Controls">




    <Style x:Key="EstiloBaseControl" TargetType="Control"  >
        <Setter Property="Background" Value="#D7E6FF"></Setter>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

    <Style x:Key="EstiloBaseControles" TargetType="Control" BasedOn="{StaticResource EstiloBaseControl}"  >

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="White"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>


    <Style x:Key="TextBlockStatusBar" TargetType="TextBlock" >
        <Setter Property="FontSize" Value="10"></Setter>
        <Setter Property="Margin" Value="0,-1.5,0,0"></Setter>
        <Setter Property="Height" Value="15"></Setter>
    </Style>

    <Style x:Key="StatusbarItemStatusBar" TargetType="StatusBarItem">
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Margin" Value=".5"></Setter>
    </Style>

    <SolidColorBrush x:Key="GrayBrushKey">#FFD4D0C8</SolidColorBrush>

    <Style x:Key="RibbonButton" TargetType="my:ButtonDropDown">
        <Setter Property="PopupType" Value="Menu" />
        <Setter Property="ImagePosition" Value="Top" />
        <Setter Property="ExpandPosition" Value="Bottom" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="65" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
    </Style>

    <!-- Para poder usar el aternado, el estilo debe ser puesto en la propiedad ItemContainerStyle del grid
                    y adicionarse la propiedad  AlternationCount="2" para que tome las lineas salteadas 
                    (el AdvGrid no soporta  AlternationCount mayor a 2)-->
    <Style x:Key="EstiloAlternadoGrid" TargetType="dc:AdvGridRow" >
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ESTILOS GENERALES PARA CONTROLES COMUNES -->



</ResourceDictionary>